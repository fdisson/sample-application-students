language: java
jdk: oraclejdk8

#Define the services to use
services:
  - docker
before_install:
  - sudo service mysql stop
  - docker pull takimatraining/devops-training-db
  - docker run -d -p 127.0.0.1:3306:3306 takimatraining/devops-training-db

# Run Unit Test and Integration Tests
script:
  - mvn verify

# Cache the .m2 folder to prevent redownloading dependencies on each build
cache:
  directories:
  - "$HOME/.m2/repository"

# Environment variables are strings (double quotes)
# Example:
# - secure: "DpR1th9rZvLMX0......"
env:
  global:
    - secure: "NYRfI6y1A+3eOaKPwH22bfDoKXbc5SChzesu8M3JToTz0QYWgIqsQEK39bp2FYXTZ8f3EO9aLwTWs8WRbj/6/lfQ4eiux8P4ROti0VUWx3It8EjatLnJkAwTBtao9JqnNMc8TL6ht3ZYUzCuJs0xiuUm3uQLrWFaCSZCctfpEj+Fg/9LG0CVSRB1mf5jj66e6l5t7MBtjBZCWzkEgb01hjRkYljsm0GHOeuNJa5JJQa1YIwt/CHxexSgdbmoTlhfyATw7T54OgEDEFttW+P/Wp0RQGEY1DOeoaL4VjI6kEPQEH9AUtmeJX/+fvA9c5i4r+p6p9PaudIB7ZjV985IVq/tCWBTIbPf8C8w7XaoFkWKD+VrRkhQ03dC0X7hrOYpRsf1m+tO44RZcLpdPZSdf6kG6O+tXff66RNTJko3nZrocHSAJSSjdc+AWVe6h1Hn5EkqA6K8/sxPyTPMbDhioUBj7hqpHOSuMRjDKz4ACnM04e8KxzFesNjdn9LFH/CfDChmKvkBn/KlXo4um3cGhBKivH9NsYbDI1CnRcYDA2Shs2gkUsZ8D4z5pygQ7IZgMK2BYXKnYnJBz5hEPc0fMIddtgKOhm1GOI4m33buL2dJVOn3VTLUgeJbbJK+z35cKPHUM4f0/HT6OjsnkqaSSloOJdhYGlaoCm5YnArwCYY="

# The pipe (|) is useful to create multiline scripts
script:
  - |
    mvn clean install sonar:sonar \
      -Dsonar.projectKey=fdisson_sample-application-students \
      -Dsonar.organization=fdisson-github \
      -Dsonar.host.url=https://sonarcloud.io \
      -Dsonar.login=$SONAR_TOKEN

env:
  global:
    # [...] other tokens
    - secure: "boxxDsDJvfK2JtP+wYv0HH5D7a+23XZw13JNP8ru+oSE1rWDdXbZI3ZEj720wLu5z2j6MqLk54qiCOFNbQG+M26ytl2hMbxM1fSYZ3dV4nG8bTLXiE9RMiFreIrNLBvi933IBtngDrirQEzrEzz+ta1O3yUouYmUfamnB9i6ANCZktVnmF+TBovIjzbNPjVG5dXpEjReeJDHHcH8VildJh6geikv7qVz8PGFW+snjtQXJ1yEbQw8jqHw3X4erpeu0CuWLG/pafefEX0eIgUatZronZGo2zblILl6e/saJBAkQS3dSIT8jlfgqcZvSd6eNTYlQrXZ4SKnUfQzK1kl2xf0d5hzpqiLmWTCtYJPy52w8qPwCaRUrcSjdDrvfwcE7vT894kg+MSs5+UDMa4hl7c4VPN0LRy1sVxcE7U5F/fZ+ZwC5iKloEnLg6W8mCfXijOocS6+gI0efJmXfsd+oEI1xXBuX/0Mf/8SWjaxIruZKkEhVOrYyGH0QHu+ltzm3c2phSu3QRO4a3FqtGFNu5R0yfP8q8ZKE6EeMwH3Eo87vANDgEMPf67liQtubRgW1sOl7CyELAb+BGGpe9+DYGRjGmmyaPgFVQz3fsoRpcPnmV9Mkcf6PnPvjMBxamWwJrLc0XCjOXwMy7SHpPZGAe7/sDIkx8SDq0v73pmsSRI="
    - secure: "pq9BgpBl4DP4kWKm946N87MDo+WBDh4g5oZAVE2tX1oJbt/4zoNUjH0ilHJOAMyCuMP+zdfbWbYOY/v+lj2hE6162Wv9q8HKwTM+Y6p1YABdIvqtHSbIjAR6KYAk/9z357izc5bNNb+3FenMIEQphr7PEGbWab+CgZLKHpFdGkDfSTUh9YxkwwGTZ1XkLt6aMKWRPYK1jxp2H/rDHZosalVwpdeIRST44Z4x01BROHJw11E24uHXglNPhME00TsSaikN5/TYvwEsnBky0EM2DiG+Bsm24itOokuXSbTrUJgcKyvG3CskjCVGYUYV9znd2KJZszfhz3I8W0hMLVe/BD68fseT/4E5qPZRTDFHv75+x/RBJn5ISP4VFNfFoE7r2jrgR8JiM3MFzN2s1xe0Ta803wcPhlfj0pdjZwOJzesrfc8G1CgVS7ILsL9ZdRza22WsyHtvTNXNjpr/RJcWc7g47YBMYLwLpjps2w9dlXXlpUNo5RPCwM2Kse1+jFbEparnRZnkF5nhALTYEKybssg0pEnUZEzTveT2Tu9YMvEbiR2YgpB+cArxSDT7FbDHkV9jf08ERIiP6OC/vu3f5aNC2nooYWO2yzbggRPEDmucbNdRQvN/YfT7Jpi0EkUSW8uf9SybdttX92XvXQNr8Jkw6iVPrRByGbksd4G3D1s="

# Build an image containing the .jar and push it to the Docker Hub
after_success:
  # Login to Docker hub
  - docker login -u $DOCKER_USER -p $DOCKER_PASS
  # Tag text according to the branch
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`
  # Image name
  - export IMAGE_NAME=takimatraining/sample-application
  # Build the image (see Dockerfile) and tag it with the commit ID
  - docker build -t $IMAGE_NAME:$TRAVIS_COMMIT .
  # Retag the image with the previously choosen tag
  - docker tag $IMAGE_NAME:$TRAVIS_COMMIT $IMAGE_NAME:$TAG
  # Push the tagged image to Docker Hub
  - docker push $IMAGE_NAME:$TAG